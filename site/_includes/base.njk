<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="alternate" type="application/rss+xml" title="Tiny Helpers RSS feed"
    href="https://tiny-helpers.dev/feed.xml">

  <title>{{ renderData.title }} – Tiny Helpers</title>
  <meta name="title" content="{{ renderData.title }} – Tiny Helpers">
  <meta name="description" content="{{ pkg.description }}">

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://tiny-helpers.dev/">
  <meta property="og:title" content="{{ renderData.title }} – Tiny Helpers">
  <meta property="og:description" content="{{ pkg.description }}">
  <meta property="og:image" content="https://tiny-helpers.dev/large-media-image.jpg">

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:url" content="https://tiny-helpers.dev/">
  <meta property="twitter:title" content="{{ renderData.title }} – Tiny Helpers">
  <meta property="twitter:description" content="{{ pkg.description }}">
  <meta property="twitter:image" content="https://tiny-helpers.dev/large-media-image.jpg">

  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">

  {% if renderData.isCanonical %}
    {% if tag.slug == 'home' %}
      <link rel="canonical" href="/" />
    {% else %}
      <link rel="canonical" href="/{{ tag.slug }}/" />
    {% endif %}
  {% endif %}

  <style>
    {{ styles | safe }}
  </style>
</head>

<body>
  <a href="#main-content" class="skip-link padding-xs">Skip to main content</a>

  <button id="loginBtn" type="button">login</button>
  <button id="logoutBtn" type="button">log out</button>

  <div class="container">
    {% include 'templates/_logo.njk' %}
    {% include 'templates/_social.njk' %}
    {% include 'templates/_navigation.njk' %}

    <main id="main-content">
      {{ content | safe }}
    </main>
  </div>

  {% set js %}
    {% include "js/main.js" %}
  {% endset %}
  <script type="module">{{ js | jsmin | safe }}</script>
  <script src="https://cdn.auth0.com/js/auth0-spa-js/1.9/auth0-spa-js.production.js"></script>
  <script>
    (async () => {
      let auth0 = await createAuth0Client({
        domain: "{{ vars.AUTH0_DOMAIN }}",
        client_id: "{{ vars.AUTH0_CLIENT_ID }}",
        audience: "{{ vars.AUTH0_AUDIENCE }}"
      });;

      document.getElementById('loginBtn').addEventListener('click', async () => {
        await auth0.loginWithRedirect({
          redirect_uri: window.location.origin
        });
      });

      document.getElementById('logoutBtn').addEventListener('click', async () => {
        auth0.logout({
          returnTo: window.location.origin
        });
      });

      [...document.querySelectorAll('.star-btn')].forEach(btn => {
        btn.addEventListener('click', async (event) => {
          const [user, token] = await Promise.all([auth0.getUser(), auth0.getTokenSilently()]);

          const response = await fetch("/api/star", {
            method: 'POST',
            headers: {
              Authorization: `Bearer ${token}`,
              'Content-Type': 'application/json'
            },

            body: JSON.stringify({
              user: user.email,
              helperUrl: event.target.dataset.url
            })
          });
          const responseData = await response.json();
        });
      })


      const isAuthenticated = await auth0.isAuthenticated();
      console.log(isAuthenticated);


      if (isAuthenticated) {
        const [user, token] = await Promise.all([auth0.getUser(), auth0.getTokenSilently()]);
        console.log('isAuthenticated', await auth0.getUser());

        const response = await fetch(`/api/helpers?user=${user.email}`, {
          method: 'GET',
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json'
          },
        });

        const helpers = await response.json()

        helpers.forEach(helper => {
          document.querySelector(
            `[data-url="${helper.url}"]`
          ).style.border = '4px solid red'
        })

        return;
      }

      // NEW - check for the code and state parameters
      const query = window.location.search;
      if (query.includes("code=") && query.includes("state=")) {

        // Process the login state
        await auth0.handleRedirectCallback();

        // TODO
        // updateUI();


        // Use replaceState to redirect the user away and remove the querystring parameters
        window.history.replaceState({}, document.title, "/");
      }
    })()
  </script>
</body>

</html>
